<?phpclass Consultas extends CI_Model{		public function __construct()	{		$this->load->database();	}	 public function cargar_todo($tabla)   {		$this->db->select();		$this->db->from($tabla);		$query=$this->db->get();		return $query->result_array();   }    public function cargar_todo2($tabla)   {		$this->db->distinct()->select();		$this->db->from($tabla);		$query=$this->db->get();		return $query->result_array();   }   public function cargar_registros($tabla,$campo,$id)   {		$this->db->select();		$this->db->from($tabla);		$this->db->where($campo,$id);		$query=$this->db->get();		return $query->result_array();   }       public function cargar_entradas($identificador_bodega)   {   		$query = "bod_id,art_id,art_nombre,sar_cant_actual";		$this->db->select($query);		$this->db->from('sar_saldos_articulos');		$this->db->join('bod_bodega','sar_id_bod=bod_id');		$this->db->join('art_articulo','sar_id_art=art_id');		$this->db->where('bod_id =',$identificador_bodega);		$this->db->where('sar_cant_actual >',0);		$this->db->group_by('art_nombre');		$query=$this->db->get();		return $query->result_array();   }            public function cargar_articulos($iden_bod,$iden_art)   {   		$query = "MIN(sar_id) as identificador,sar_precio,sar_cant_actual";		$this->db->select($query);		$this->db->from('sar_saldos_articulos');		$this->db->where('sar_cant_actual >',0);		$this->db->where('sar_id_bod =',$iden_bod);		$this->db->where('sar_id_art =',$iden_art);		$query=$this->db->get();		return $query->row_array();   }//end fucntion cargar_articulos       public function comprobar_existencias($valor_articulo,$bodega)    {    	$query = "SUM(sar_cant_actual) as existencias";    	$this->db->select($query);    	$this->db->from('sar_saldos_articulos');    	$this->db->where('sar_id_art',$valor_articulo);    	$this->db->where('sar_id_bod',$bodega);      $query2=$this->db->get();		return $query2->row_array();    }//end fucntion  comprobar_existencias    public function costo_promedio($id_articulo)    {    	$query = "Select SUM(precio*total)/SUM(total) as costo     	From (select sar_precio as precio, sar_cant_actual as cant, sar_cant_actual * sar_precio as total     		from sar_saldos_articulos where sar_cant_actual > 0 AND sar_id_art = $id_articulo) as f";       $valores = $this->db->query($query);        return $valores->row();          }   function detalles_inventario($proceso,$fecha1,$fecha2)   {   	$query="moi_movimiento_inv.moi_detalle as detalle,moi_movimiento_inv.moi_fecha_mov as fecha,dee_detalle_mov.dee_cantidad as cantidad,dee_detalle_mov.dee_precio as precio,art_articulo.art_nombre as articulo,tia_tipo_articulos.tia_nombre as categoria,bod_bodega.bod_nombre as bodega,(dee_detalle_mov.dee_cantidad * dee_detalle_mov.dee_precio) as subtotal,sar_cant_actual";    $this->db->select($query);    $this->db->from('moi_movimiento_inv');   	    $this->db->join('dee_detalle_mov','moi_movimiento_inv.moi_id=dee_detalle_mov.dee_id_moi');    $this->db->join('art_articulo','dee_detalle_mov.dee_id_art = art_articulo.art_id');    $this->db->join('tia_tipo_articulos','art_articulo.art_id_tia = tia_tipo_articulos.tia_id');    $this->db->join('bod_bodega','moi_movimiento_inv.moi_id_bod=bod_bodega.bod_id');    $this->db->join('sar_saldos_articulos','art_articulo.art_id = sar_saldos_articulos.sar_id_art','left');    $this->db->where('moi_movimiento_inv.moi_id_tip =',$proceso);    $this->db->where('moi_movimiento_inv.moi_fecha_mov >=',$fecha1);    $this->db->where('moi_movimiento_inv.moi_fecha_mov <=',$fecha2);    $this->db->group_by('moi_movimiento_inv.moi_id');    $resultado = $this->db->get();    return $resultado->result_array();   }//end function detalles_inventario   function detalle_todo($fecha1,$fecha2)   {    $query="moi_movimiento_inv.moi_detalle as detalle,moi_movimiento_inv.moi_fecha_mov as fecha,dee_detalle_mov.dee_cantidad as cantidad,dee_detalle_mov.dee_precio as precio,art_articulo.art_nombre as articulo,tia_tipo_articulos.tia_nombre as categoria,bod_bodega.bod_nombre as bodega,(dee_detalle_mov.dee_cantidad * dee_detalle_mov.dee_precio) as subtotal,sar_cant_actual";    $this->db->select($query);    $this->db->from('moi_movimiento_inv');        $this->db->join('dee_detalle_mov','moi_movimiento_inv.moi_id=dee_detalle_mov.dee_id_moi');    $this->db->join('art_articulo','dee_detalle_mov.dee_id_art = art_articulo.art_id');    $this->db->join('tia_tipo_articulos','art_articulo.art_id_tia = tia_tipo_articulos.tia_id');    $this->db->join('bod_bodega','moi_movimiento_inv.moi_id_bod=bod_bodega.bod_id');    $this->db->join('sar_saldos_articulos','art_articulo.art_id = sar_saldos_articulos.sar_id_art','left');    $this->db->where('moi_movimiento_inv.moi_fecha_mov >=',$fecha1);    $this->db->where('moi_movimiento_inv.moi_fecha_mov <=',$fecha2);    $this->db->group_by('moi_movimiento_inv.moi_id');    $resultado = $this->db->get();    return $resultado->result_array();   }      public function load_wok()   {     $query = " fun_funo.fun_id,fun_funo.fun_concepto,fun_funo.fun_fecha,fun_funo.fun_subtotal,fun_funo.fun_impuesto,fun_funo.fun_total,fun_funo.fun_contribuyente";     $this->db->select($query);         $this->db->from('fun_funo');     $this->db->where('fun_funo.fun_estado',1);     $result = $this->db->get();     ///echo $this->db->last_query();    return  $result->result_array();   }   public function load_impreso()   {     $query = " fun_funo.fun_id,fun_funo.fun_concepto,fun_funo.fun_fecha,fun_funo.fun_subtotal,fun_funo.fun_impuesto,fun_funo.fun_total,fun_funo.fun_contribuyente";     $this->db->select($query);         $this->db->from('fun_funo');     $this->db->where('fun_funo.fun_estado',0);     $result = $this->db->get();   //  echo $this->db->last_query();    return  $result->result_array();   }   public function load_anular()   {     $query = " fun_funo.fun_id,fun_funo.fun_concepto,fun_funo.fun_fecha,fun_funo.fun_subtotal,fun_funo.fun_impuesto,fun_funo.fun_total,fun_funo.fun_contribuyente";     $this->db->select($query);         $this->db->from('fun_funo');     $this->db->where('fun_funo.fun_estado',5);     $result = $this->db->get();   //  echo $this->db->last_query();    return  $result->result_array();   }   public function cargar_detalle_funo_esp($id)   {     $query = "  fun_funo.fun_id,fun_funo.fun_concepto,fun_funo.fun_fecha,fun_funo.fun_subtotal,fun_funo.fun_impuesto,fun_funo.fun_total,fun_funo.fun_contribuyente";     $this->db->select($query);     $this->db->from('fun_funo');     $this->db->where('fun_funo.fun_id =',$id);     $this->db->group_by('fun_funo.fun_concepto');     $result = $this->db->get();     return $result->result_array();   }      public function cargar_detalle_funo_libre($id)  {    $query = "fun_funo.fun_id, fun_funo.fun_concepto,fun_funo.fun_subtotal,fun_funo.fun_impuesto,fun_funo.fun_total,fun_funo.fun_contribuyente,cp_cuenta_presupuestaria.cp_nombre,cp_cuenta_presupuestaria.cp_codigo, fud_funo_deta_libre.fud_monto";    $this->db->select($query);    $this->db->from('fud_funo_deta_libre');    $this->db->join('cp_cuenta_presupuestaria','fud_funo_deta_libre.fud_id_cp = cp_cuenta_presupuestaria.cp_id');    $this->db->join('fun_funo fun_funo','fud_funo_deta_libre.fud_id_fun = fun_funo.fun_id');    $this->db->where('fun_funo.fun_id',$id);    $result = $this->db->get();    return $result->result_array();  }  public function cargar_detalle_funo_pdf($id)   {     $query = "  fun_funo.fun_id,fun_funo.fun_concepto,fun_funo.fun_fecha,fun_funo.fun_subtotal,fun_funo.fun_impuesto,fun_funo.fun_total,fun_funo.fun_contribuyente,srv_servicio.srv_nombre,det_detalle_cntc.det_monto";     $this->db->select($query);     $this->db->from('fun_funo');     $this->db->join('fxd_funoxdetalle_cntc','fxd_funoxdetalle_cntc.fxd_id_fun = fun_funo.fun_id');     $this->db->join('det_detalle_cntc','fxd_funoxdetalle_cntc.fxd_id_det = det_detalle_cntc.det_id');     $this->db->join('sxc_servicioxcuenta_corriente','det_detalle_cntc.det_id_sxc = sxc_id');     $this->db->join('srv_servicio','sxc_servicioxcuenta_corriente.sxc_id_srv = srv_servicio.srv_id');     $this->db->where('det_detalle_cntc.det_estado',1);     $this->db->where('fun_funo.fun_id =',$id);     $result = $this->db->get();     return $result->result_array();   }                function existencias_bodega($id_bodega)         {           $query = " select art_nombre,SUM(sar_cant_actual) as total,ser_nombre,ser_id,                      (Select MAX(cor_correlativo.cor_numero) from cor_correlativo where cor_id_ser = ser_id and cor_correlativo.cor_estado = 0) as usado,                      (Select MAX(cor_correlativo.cor_numero) from cor_correlativo where cor_id_ser = ser_id and cor_correlativo.cor_estado = 2) as asignado                      from sar_saldos_articulos                      inner join art_articulo ON sar_saldos_articulos.sar_id_art = art_articulo.art_id                      inner join ser_serie ON art_articulo.art_id = ser_serie.ser_id_art                      where sar_saldos_articulos.sar_id_bod = ".$id_bodega."                      group by art_articulo.art_nombre";          $informacion = $this->db->query($query);          return $informacion->result_array();         }//end function existencias_bodega         public function existencias_capas()         {          $query = 'moi_movimiento_inv.moi_id,art_articulo.art_nombre,sar_saldos_articulos.sar_cant_actual,dee_detalle_mov.dee_precio,dee_detalle_mov.dee_cantidad,moi_movimiento_inv.moi_fecha_mov,max(cor_correlativo.cor_numero) as maximo ,min(cor_correlativo.cor_numero) as mini, count(cor_correlativo.cor_numero) as total';          $this->db->select($query);          $this->db->from('sar_saldos_articulos');          $this->db->join('art_articulo','sar_saldos_articulos.sar_id_art = art_articulo.art_id');          $this->db->join('dee_detalle_mov','dee_detalle_mov.dee_id_art = art_articulo.art_id AND dee_detalle_mov.dee_id_sar = sar_saldos_articulos.sar_id');          $this->db->join('moi_movimiento_inv moi_movimiento_inv','dee_detalle_mov.dee_id_moi = moi_movimiento_inv.moi_id');          $this->db->join('cor_correlativo','cor_correlativo.cor_id_dee = dee_detalle_mov.dee_id');          $this->db->where('cor_correlativo.cor_estado',0);          $this->db->where('moi_id_tip',1);          $this->db->group_by('moi_movimiento_inv.moi_id');          $rs = $this->db->get();          return $rs->result_array();         }        function sumar_montos($id_funo)       {         $this->db->select('SUM(fud_monto) as suma');         $this->db->from('fud_funo_deta_libre');         $this->db->where('fud_id_fun',$id_funo);         $rs = $this->db->get();         return $rs->row_array();       }       function especies_vendidas($f1,$f2)       {         $this->db->select(' sum(fud_funo_deta_libre.fud_monto) as total,cp_cuenta_presupuestaria.cp_id,cp_cuenta_presupuestaria.cp_codigo,art_articulo.art_nombre,fun_funo.fun_fecha');         $this->db->from('fud_funo_deta_libre');         $this->db->join('cp_cuenta_presupuestaria','fud_funo_deta_libre.fud_id_cp = cp_cuenta_presupuestaria.cp_id');         $this->db->join('fun_funo','fud_funo_deta_libre.fud_id_fun = fun_funo.fun_id');         $this->db->join('art_articulo','art_articulo.art_id_cp = cp_cuenta_presupuestaria.cp_id');         $this->db->where('fun_tipo =',3);         $this->db->where('fun_fecha >=',$f1);         $this->db->where('fun_fecha <=',$f2);         $this->db->group_by('art_id');         $rs = $this->db->get();         return $rs->result_array();       }       function obtener_proceso($caja)       {         $this->db->select('*');         $this->db->from('cxu_cajaxusuario');         $this->db->where('cxu_id_caj',$caja);         $this->db->where('YEAR(cxu_fecha)',date("Y"));         $this->db->where('MONTH(cxu_fecha)',date("m"));         $this->db->where('DAY(cxu_fecha)',date("d"));         $rs = $this->db->get();         return $rs->result_array();       }                function obtener_retension_cheques($prv,$fecha)        {                   $query = "prv_proveedor.prv_nombre,prv_proveedor.prv_direccion,prv_proveedor.prv_nit,prv_proveedor.prv_nrc,prv_proveedor.prv_giro,mun_municipio.mun_nombre,dep_departamento.dep_nombre,(che_monto - che_renta_monto) as cheque,che_numero as numero,che_fecha as fecha";                   $this->db->select($query);         $this->db->from('mun_municipio');         $this->db->join('dep_departamento','mun_municipio.mun_id_dep = dep_departamento.dep_id');         $this->db->join('prv_proveedor','prv_proveedor.prv_id_mun = mun_municipio.mun_id');         $this->db->join('che_cheque','che_cheque.che_id_prv = prv_proveedor.prv_id');         $this->db->where('YEAR(che_fecha)',$fecha);         $this->db->where('che_id_prv',$prv);         $this->db->where('che_renta',1);         $rs = $this->db->get();         return $rs->result_array();        }      function obtener_proceso_usuario($id)       {         $this->db->select('*');         $this->db->from('cxu_cajaxusuario');         $this->db->where('cxu_id_usu',$id);         $this->db->where('YEAR(cxu_fecha)',date("Y"));         $this->db->where('MONTH(cxu_fecha)',date("m"));         $this->db->where('DAY(cxu_fecha)',date("d"));         $rs = $this->db->get();                  return $rs->result_array();       }     function obtener_proceso_usuario2($id)       {         $this->db->select('*');         $this->db->from('cxu_cajaxusuario');         $this->db->where('cxu_id_usu',$id);         $this->db->where('YEAR(cxu_fecha)',date("Y"));         $this->db->where('MONTH(cxu_fecha)',date("m"));         $this->db->where('DAY(cxu_fecha)',date("d"));         $this->db->where('cxu_tipo',1);         $rs = $this->db->get();         return $rs->row_array();       }      function obtener_total_cierre_caja($id)     {       $query = "select (select @apertura := sum(cxu_entrada) FROM cxu_cajaxusuario WHERE cxu_tipo = 1 AND YEAR(cxu_fecha)=".date("Y")." AND MONTH(cxu_fecha)=".date("m")." AND DAY(cxu_fecha) =".date("d").") as valor1,(select @entradac := sum(cxu_entrada) FROM cxu_cajaxusuario WHERE cxu_tipo = 2 AND YEAR(cxu_fecha) =".date("Y")." AND MONTH(cxu_fecha)=".date("m")." AND DAY(cxu_fecha) =".date("d").") as valor2,(select @salidac := sum(cxu_salida) FROM cxu_cajaxusuario WHERE cxu_tipo = 2 AND YEAR(cxu_fecha) =".date("Y")." AND MONTH(cxu_fecha)=".date("m")." AND DAY(cxu_fecha) =".date("d").") as valor3,(select @monto := sum(fxc_monto) FROM fxc_funoxcaja where fxc_id_cxu = ".$id." AND YEAR(fxc_fecha) =".date("Y")." AND MONTH(fxc_fecha)=".date("m")." AND DAY(fxc_fecha) =".date("d").") as valor4,ROUND(SUM(@apertura + @entradac - @salidac + @monto),2) AS total";       $valores = $this->db->query($query);        return $valores->row();     }//end obtener_total_cierre_caja          function obtener_correlativos($id_bodega,$id_articulo,$id_serie,$solicitado)     {      $query = "cor_numero";      $this->db->select($query);      $this->db->from('cor_correlativo');      $this->db->where('cor_id_ser',$id_serie);      $this->db->where('cor_id_art',$id_articulo);      $this->db->where('cor_id_bod',$id_bodega);      $this->db->where('cor_estado',0);      $this->db->limit($solicitado);      $rs = $this->db->get();      return $rs->result_array();     }     function obtener_correlativos2($id_bodega,$id_articulo,$id_serie,$solicitado)     {      $query = "cor_numero";      $this->db->select($query);      $this->db->from('cor_correlativo');      $this->db->where('cor_id_ser',$id_serie);      $this->db->where('cor_id_art',$id_articulo);      $this->db->where('cor_id_bod',$id_bodega);      $this->db->where('cor_estado',1);      $this->db->limit($solicitado);      $rs = $this->db->get();      return $rs->result_array();     }     function reporte_diario()     {       $query =" fun_funo.fun_contribuyente as contribuyente,DATE_FORMAT(fxc_funoxcaja.fxc_fecha,'%a %b %d %Y %h:%i %p') as fecha,round(fxc_funoxcaja.fxc_monto,2) as monto";       $this->db->select($query);       $this->db->from('fun_funo');       $this->db->join('fxc_funoxcaja','fun_funo.fun_id = fxc_funoxcaja.fxc_id_fun');        $this->db->where('YEAR(fxc_funoxcaja.fxc_fecha)',date("Y"));       $this->db->where('MONTH(fxc_funoxcaja.fxc_fecha)',date("m"));       $this->db->where('DAY(fxc_funoxcaja.fxc_fecha)',date("d"));       $rs = $this->db->get();       return $rs->result_array();     }     function reporte_rango_caja($fi1,$fi2,$fi3,$fn1,$fn2,$fn3)     {      $query = "users.username,caj_caja.caj_nombre,DATE_FORMAT(fxc_funoxcaja.fxc_fecha,'%a %b %d %Y %h:%i %p') as fecha,round (sum(fxc_funoxcaja.fxc_monto),2) as monto";       $this->db->select($query);       $this->db->from('fun_funo');        $this->db->join('fxc_funoxcaja','fun_funo.fun_id = fxc_funoxcaja.fxc_id_fun');           $this->db->join('caj_caja','fxc_id_cxu = caj_caja.caj_id');        $this->db->join('cxu_cajaxusuario','fxc_funoxcaja.fxc_id_cxu = cxu_id');       $this->db->join('users','cxu_cajaxusuario.cxu_id = users.id');       $this->db->where('YEAR(fxc_funoxcaja.fxc_fecha)>=',(int)$fi1);       $this->db->where('MONTH(fxc_funoxcaja.fxc_fecha)>=',(int)$fi3);       $this->db->where('DAY(fxc_funoxcaja.fxc_fecha)>=',(int)$fi2);       $this->db->where('YEAR(fxc_funoxcaja.fxc_fecha)<=',(int)$fn1);       $this->db->where('MONTH(fxc_funoxcaja.fxc_fecha)<=',(int)$fn3);       $this->db->where('DAY(fxc_funoxcaja.fxc_fecha)<=',(int)$fn2);       $this->db->order_by('fxc_funoxcaja.fxc_fecha');       $rs = $this->db->get();       return $rs->result_array();     }  public function get_tabla($tabla,$where=0)   {        $this->db->select();    if($where!=0)    $this->db->where($where);    $this->db->from($tabla);    $query=$this->db->get();        return $query->result_array();   }    public function get_ing_des($tabla,$where=0,$tipo)   {        $this->db->select();    if($where!=0)    $this->db->where($where);    $this->db->from($tabla);    if($tipo==1)      $this->db->join('tdc_tipo_descuento','tdc_id=dtp_id_tdc');     if($tipo==2)      $this->db->join('tig_tipo_ingreso','tig_id=itp_id_tig');     if($tipo==3)      $this->db->join('tis_tipo_isr','tis_id=txt_id_tis');    $query=$this->db->get();        return $query->result_array();   }   public function get_det_ing_des($tabla,$det,$campo1,$campo2)   {        $arr=array();    foreach($det as $c):    $arr[]=$c[$campo1];    endforeach;    $this->db->select();    $this->db->from($tabla);    if(count($arr)>0)    $this->db->where_not_in($campo2,$arr);    $query=$this->db->get();    return $query->result_array();   }    public function add_regitro($tabla,$datos)  {       try{      $this->db->insert($tabla,$datos);      return $this->db->insert_id();    }    catch(Exception $e){      return 0;    }  }  public function del_opc($tabla,$where)  {       $this->db->delete($tabla,$where);    return $this->db->affected_rows();    }  function obtener_detalle_pedido($id)  {   $query = "moi_movimiento_inv.moi_fecha_mov,moi_movimiento_inv.moi_id_tip,dee_detalle_mov.dee_cantidad,dee_detalle_mov.dee_precio,art_articulo.art_nombre,sar_saldos_articulos.sar_cant_actual";   $this->db->select($query);   $this->db->from('sar_saldos_articulos');   $this->db->join('art_articulo','sar_saldos_articulos.sar_id_art = art_articulo.art_id');   $this->db->join('dee_detalle_mov','dee_detalle_mov.dee_id_sar = sar_saldos_articulos.sar_id AND dee_detalle_mov.dee_id_art = art_articulo.art_id');   $this->db->join('moi_movimiento_inv','dee_detalle_mov.dee_id_moi = moi_movimiento_inv.moi_id');   $this->db->where('moi_movimiento_inv.moi_id',$id);   $rs = $this->db->get();   return $rs->result_array();  }  function correlativos_detalle($id)   {    $query = "max(cor_correlativo.cor_numero) as maximo,min(cor_correlativo.cor_numero) as minimo,count(cor_correlativo.cor_numero) as total, art_articulo.art_nombre";    $this->db->select($query);    $this->db->from('dee_detalle_mov');    $this->db->join('art_articulo','dee_detalle_mov.dee_id_art = art_articulo.art_id');    $this->db->join('moi_movimiento_inv','dee_detalle_mov.dee_id_moi = moi_movimiento_inv.moi_id');    $this->db->join('cor_correlativo','cor_correlativo.cor_id_dee = dee_detalle_mov.dee_id');    $this->db->where('cor_correlativo.cor_id_dee',$id);    $this->db->where('cor_correlativo.cor_estado',0);    $rs = $this->db->get();    return $rs->result_array();   }    public function cargar_registro($tabla,$where)   {    $this->db->select();    $this->db->from($tabla);    $this->db->where($where);    $query=$this->db->get();    return $query->result_array();   }   function cargar_registros_empresas()   {    $query = "emp_empresa.emp_id, emp_empresa.emp_matricula, nem_nombre_empresa.nem_nombre, cat_catalogo.cat_nombre";    $this->db->select($query);    $this->db->from('emp_empresa');    $this->db->join('nem_nombre_empresa','nem_nombre_empresa.nem_id_emp = emp_empresa.emp_id');    $this->db->join('cat_catalogo','nem_nombre_empresa.nem_tipo_id = cat_catalogo.cat_id');    $this->db->where('nem_nombre_empresa.nem_estado',1);    $this->db->where('nem_nombre_empresa.nem_tipo_id',1);    $this->db->where('emp_empresa.emp_activo_inicial',0);    $this->db->where('emp_empresa.emp_estado',1);    $rs = $this->db->get();    //echo $this->db->last_query();    return $rs->result_array();   }    function cargar_arbitrios($tipo_arbitrio)    {        $this->db->select();        $this->db->from('arb_arbitrio');        $this->db->join('tar_tipo_arbitrio','arb_arbitrio.arb_id_tar = tar_tipo_arbitrio.tar_id');        $this->db->where('arb_arbitrio.arb_id_tar',$tipo_arbitrio);        $query=$this->db->get();        $data['response'] = true;        $data['message'] = array();        if( is_object( $query ) && $query->num_rows() > 0 ){            foreach ( $query->result() as $row ) {                $data['message'][] = array(                    'arb_id_srv' => $row->arb_id_srv,                    'arb_nombre' => $row->arb_nombre                );            }        }        return $data;    }      function cargar_tarifas($arb_id_srv)    {        $this->db->select();        $this->db->from('trf_tarifa');        $this->db->where('trf_tarifa.trf_id_srv',$arb_id_srv);        $query=$this->db->get();        $data['response'] = true;        $data['message'] = array();        if( is_object( $query ) && $query->num_rows() > 0 ){            foreach ( $query->result() as $row ) {                $data['message'][] = array(                    'trf_precio' => $row->trf_precio                );            }        }        return $data;    }      function buscar_cuenta_empresa($emp_id)    {        $query = "cnt_cuenta_corriente.cnt_numero";        $this->db->select($query);        $this->db->from('exc_empresaxcuentac');        $this->db->join('emp_empresa','emp_empresa.emp_id = exc_empresaxcuentac.exc_id_emp');        $this->db->join('cnt_cuenta_corriente','cnt_cuenta_corriente.cnt_id = exc_empresaxcuentac.exc_id_cnt');        $this->db->where('emp_empresa.emp_id',$emp_id);        $rs = $this->db->get();        return $rs->result_array();    }    function generar_informacion_cuentas($fecha1,$fecha2)    {      $query = "SELECT cp_cuenta_presupuestaria.cp_id,cp_cuenta_presupuestaria.cp_codigo,cp_cuenta_presupuestaria.cp_nombre,                 SUM(fud_funo_deta_libre.fud_monto) as monto            FROM    (   alcaldia.fud_funo_deta_libre fud_funo_deta_libre                     JOIN                        alcaldia.cp_cuenta_presupuestaria cp_cuenta_presupuestaria                     ON (fud_funo_deta_libre.fud_id_cp = cp_cuenta_presupuestaria.cp_id))                 JOIN                    alcaldia.fun_funo fun_funo                 ON (fud_funo_deta_libre.fud_id_fun = fun_funo.fun_id)                 where fun_funo.fun_fecha >= '".$fecha1."' and fun_funo.fun_fecha <= '".$fecha2."'                 group by cp_cuenta_presupuestaria.cp_id";      $informacion = $this->db->query($query);      return $informacion->result_array();    }    function generar_cuentas($banco,$tipo_cuenta)    {      $campos = "cub_cuenta_bancaria.cub_numero,                 cub_cuenta_bancaria.cub_nombre,                 cub_cuenta_bancaria.cub_saldo_inicial,                 cub_cuenta_bancaria.cub_saldo_minimo";      $this->db->select($campos);      $this->db->from('cub_cuenta_bancaria');      $this->db->join('ban_banco','cub_cuenta_bancaria.cub_id_ban = ban_banco.ban_id');      $this->db->where('ban_id',$banco);      $this->db->where('cub_tipo',$tipo_cuenta);       $rs = $this->db->get();        return $rs->result_array();    }    function obtenter_detalles_egresos($id_banco, $cub_id)    {       $consulta = "SELECT che_cheque.che_numero,                           che_cheque.che_monto,                           che_cheque.che_concepto,                           che_cheque.che_fecha,                           ban_banco.ban_nombre,                           cub_cuenta_bancaria.cub_numero,                           cub_cuenta_bancaria.cub_saldo_inicial                      FROM    (   (   alcaldia.cub_cuenta_bancaria cub_cuenta_bancaria                                   JOIN                                      alcaldia.ban_banco ban_banco                                   ON (cub_cuenta_bancaria.cub_id_ban = ban_banco.ban_id))                               left JOIN                                  alcaldia.chq_chequera chq_chequera                               ON (chq_chequera.chq_id_cub = cub_cuenta_bancaria.cub_id))                           left JOIN                              alcaldia.che_cheque che_cheque                           ON (che_cheque.che_id_chq = chq_chequera.chq_id)                           where ban_id = ".$id_banco."                           AND cub_cuenta_bancaria.cub_id =".$cub_id;         $informacion = $this->db->query($consulta);       return $informacion->result_array();    }function merge_tra_cheque($id_banco, $cub_id, $fecha_a, $fecha_b){         $consulta = "SELECT che_cheque.che_monto AS monto, che_cheque.che_concepto AS concepto,che_cheque.che_fecha AS fecha, che_cheque.`che_numero` AS numero, che_tipo_tra AS tipo_tra, che_id AS identificador  FROM ( ( alcaldia.cub_cuenta_bancaria cub_cuenta_bancaria JOIN alcaldia.ban_banco ban_banco ON (cub_cuenta_bancaria.cub_id_ban = ban_banco.ban_id)) JOIN alcaldia.chq_chequera chq_chequera ON (chq_chequera.chq_id_cub = cub_cuenta_bancaria.cub_id))  JOIN alcaldia.che_cheque che_cheque ON (che_cheque.che_id_chq = chq_chequera.chq_id)  WHERE ban_id = ".$id_banco." AND cub_cuenta_bancaria.cub_id =".$cub_id." AND che_cheque.che_fecha BETWEEN '".$fecha_a."' AND '".$fecha_b."' UNION  SELECT tra.tra_monto AS monto, tra.tra_operacion AS concepto , tra.tra_fecha AS fecha, tra.tra_numero AS numero,  tra_tipo_tra AS tipo_tra, tra_id AS identificador  FROM tra_transaccion AS tra INNER JOIN cub_cuenta_bancaria cub ON cub.cub_id = tra.tra_id_cub  AND tra.tra_fecha BETWEEN '".$fecha_a."' AND '".$fecha_b."'AND cub.cub_id =".$cub_id."  ";         $informacion = $this->db->query($consulta);       return $informacion->result_array();}    function obtener_detalle_remesa($id_Caja)    {     $consulta = "                  SELECT caj_caja.caj_nombre,                     caj_caja.caj_estado,                     cxu_cajaxusuario.cxu_fecha,                     cxu_cajaxusuario.cxu_salida                FROM    alcaldia.cxu_cajaxusuario cxu_cajaxusuario                     JOIN                        alcaldia.caj_caja caj_caja                     ON (cxu_cajaxusuario.cxu_id_caj = caj_caja.caj_id)                     where cxu_cajaxusuario.cxu_salida > 0 and  cxu_cajaxusuario.cxu_salida is not null                     and cxu_cajaxusuario.cxu_tipo = 2 and caj_id = ".$id_Caja;     $informacion = $this->db->query($consulta);     return $informacion->result_array();    }    function ver_empleados_puesto($id_puesto)    {      $consulta = "SELECT emp_empleado.emp_nombres,                          emp_empleado.emp_id,                       emp_empleado.emp_apellidos,                       emp_empleado.emp_profesion,                       emp_empleado.emp_salario                  FROM    alcaldia.emp_empleado emp_empleado                       JOIN                          alcaldia.pto_puesto pto_puesto                       ON (emp_empleado.emp_id_plz = pto_puesto.pto_id)                       WHERE pto_puesto.pto_id = ".$id_puesto;      $informacion = $this->db->query($consulta);     return $informacion->result_array();    }    function informacion_empleado($empleado)    {      $consulta = "                  SELECT emp_empleado.emp_nombres,                          emp_empleado.emp_id,                       emp_empleado.emp_apellidos,                       emp_empleado.emp_profesion,                       emp_empleado.emp_salario,                       emp_empleado.emp_direccion,                       emp_fecha_ingreso,                       emp_codigo,                       pto_puesto.pto_nombre                  FROM    alcaldia.emp_empleado emp_empleado                       JOIN                          alcaldia.pto_puesto pto_puesto                       ON (emp_empleado.emp_id_plz = pto_puesto.pto_id)                       WHERE emp_empleado.emp_id = ".$empleado;      $informacion = $this->db->query($consulta);     return $informacion->result_array();    }    function constancia_renta($empleado)    {      $consulta = "                   select                    emp_empleado.emp_nombres,                                              emp_empleado.emp_id,                                           emp_empleado.emp_apellidos,                                           emp_empleado.emp_profesion,                                           emp_empleado.emp_salario,                                           emp_empleado.emp_direccion,                                           emp_fecha_ingreso,                                           emp_codigo,                                           pto_puesto.pto_nombre,                    (select SUM(dss_valor) from dss_descuento where dss_descuento.dss_id_emp = emp_id and dss_descuento.dss_id_tdc = 3) as renta,                    (select SUM(dss_valor) from dss_descuento where dss_descuento.dss_id_emp = emp_id and dss_descuento.dss_id_tdc = 7) as seguro,                    (select inn_valor from inn_ingreso where inn_ingreso.inn_id_emp = emp_id and inn_ingreso.inn_id_tig = 6) as aguinaldo                    from emp_empleado                    JOIN                                              alcaldia.pto_puesto pto_puesto                                           ON (emp_empleado.emp_id_plz = pto_puesto.pto_id)                    where emp_id = ".$empleado;      $informacion = $this->db->query($consulta);      return $informacion->result_array();    }  }?>